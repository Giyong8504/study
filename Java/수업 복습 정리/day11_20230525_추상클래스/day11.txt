추상클래스
추상적 - 정해지지 않은
         - 메서드의 구현체가 정해이지 않은 클래스

구체적 - 확실하게 정해진
         - 메서드의 구현체가 정해진 클래스

추상적 의미?
-정해지지 않은 -> 메서드
-공통적인
하위클래스가 공통적으로 사용할 기능들을 미리 구현하자.
추상클래스 + 인스턴스 기능을 포함함.


1. 추상클래스란? - 설계의 틀을 잡주는 역할

2. 추상클래스 문법
abstract
3. 추상클래스를 만드는 이유
하위클래스 상속을 하면 객체 생성 가능

추상메서드 -> 하위클래스가 따라야 할 규칙, 원칙 -> 설계 원칙

java.io.InputStream - 추상 클래스
abstract int read() : 추상 메서드

AudioInputStream    FileInputStream
   int read()                 int read()


4. 추상클래스와 다형성

5. final 예약어.








상속을 통해서는 객체 생성이 가능하다.
데이터 영역에 있는 멤버변수에서 생성자를 통해 스택에 객체를 생성하면 힙에 공간이 생김~.


추상메서드를 구현해야만 사용이 가능하기에 하위클래스가 추상메서드를 통하여 규칙, 원칙있게 구현되게 한다.


하위 클래스가 지켜야할 원칙을 설계하는 것.

추상클래스로 구현할 부분을 작성하고
필요한 부분을 형식대로 작성하는게 중요하다.

설계시 통일성 있게 표준화를 만들어두고 시작하면 통합이 쉽다.


=-=======================
인터페이스
1. 인터페이스란?
인터페이스 - 설계
interface : 설계 목적의 용도로 한정된 클래스의 일종
-추상 메서드 만을 정의하는 것이 목적.(무조건)

interface 인터페이스명 {
   
}
- 추상메서드만 정의 하도록 설계되어있다.
- 변수 정의 -> 변수 X -> 정적 상수 (public static final...)
- 정적 메서드 
인터페이스 명세서 -> 설계

2. 클래스에서 인터페이스 구현하기

인터페이스는 하위클래스가 추상메서드를 구현하는지 가장 중점 사항
-> implements (구현하다..)

interface는 public abstract 만을 사용하기 때문에 구현할 때도 public을 반드시 사용해야한다.



3. 인터페이스 구현과 형변환(다형성)
인터페이스도 클래스.
상위클래스임.

인터페이스의 요소 살펴보기
1. 인터페이스 상수 (데이터 영역)


클래스의 멤버변수
- final 변수 -> 상수 -> 객체가 생성되면 접근할 수 있는 상수
- static final 변수 -> 정적상수 -> 객체 생성과 상관없이 접근할 수 있는 상수


2. 디폴트 메서드
- 완전히 구현된 메서드를 정의 할때
- default 키워드를 넣는다. (접근 범위 public)


3. 정적 메서드
  static -> 인터페이스도 객체를 생성할 필요X, 접근 가능한 메서드


4. private 메서드
  -JDK 11 


인터페이스 활용하기
1. 한클래스가 여러 인터페이스를 구현하는 경우
2. 두 인터페이스의 디폴트 메서드가 중복되는 경우
3. 인터페이스 상속하기


= ======================









인터페이스
-설계가 목적으로 정해진 클래스 일종

interface 인터페이스명{

}
-추상메서드만 정의하도록 성계되어있다.
-변수정의 - 변수 X -> 정적 상수(pulbic static final..)
-정적메서드
-완전히 구현된 인스턴스 메서드 정의가능(default)
-private 메서드

-하위클래스가 구현을 통해서 객체 생성
  -implements
  -여러개의 인터페이스를 하나의 클래스에서 구현가능


  Buy, Sell 인터페이스
  Order 클래스
  






















