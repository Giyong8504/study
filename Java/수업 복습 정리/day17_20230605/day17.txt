유용한 클래스
1.java.lang.Math
abs(...) 절대값
ceil(...)  : 올림
floor(...) : 버림
round(...) : 반올림
pow(double a, double b) : a^b
sqrt(double a) - 루트
random(...) : 0~1 미만의 랜덤수(double)


1.java.util.Objects (Ex01)
  -hash(.....)

2.java.util.Random (Ex02)

3.java.util.Scanner (Ex04)
 - 입력

 Integer
    .parseInt(문자열) -> int

Long
  .parseLong

Double
  .parseDouble

4. java.util.StringTokenizer


String 클래스의 편의 기능 (Ex06)
  - concat : 문자열 결합
  - contains : 문자열 포함 여부
  - char charAt : 특정 위치의 문자 반환
  - endsWith(문자열) : 문자열로 끝나는 문자열
  - startsWith(단어) : 단어로 시작하는 문자열
  - indent(int n) : n 개수만큼 공백 들여쓰기
  - indexOf("단어") : 단어가 문자열에 포함된 위치 위치(0부터..) / 없는 경우는 -1(왼쪽 -> 오른쪽) 으로 찾음.
    
  - lastIndexOf("단어") : 단어가 문자열에 포함된 위치 (오른쪽 -> 왼쪽) 으로 찾음
  - static String format(형식, Object.... args) : 형식화 문자열로 반환
  - boolean isBlank(문자열) : 공백 포함해서 빈 문자인지 체크
  - boolean isEmpty(문자열) : 빈 문자인지 체크
  - static String join(CharSequence delim, CharSequence  ... words) //문자열 결합.
  - trim("문자열") : 문자열 좌우 공백 제거   *****
  - int length() : 문자열 길이
  - String repeat(int n) : n 만큼 문자열 반복
  - replace : 문자열 치환
  - replaceAll
  - String []  <-- 반환값split
  - toCharArray() : 문자 배열 반환
  - substring(int begin) : begin 인덱스 이후 문자열
  - substring(int begin, int end) begin 이상, end 미만 문자열 (end는 미만이라 포함안됨)
  - toUpperCase() : 소문자 -> 대문자
  - toLowerCase() : 소문자 -> 대문자

  - valueOf("다양한 기본 자료형) : 문자열로 바꿔주는 것.




=====================================

형식화 클래스
(많은 경우가 java.text 패키지에 담겨있음 : 형식화 관련 클래스)
1.  DecimalFormat - 숫자 형식화
 0 : 없는 자리수는 0으로 채워 넣는다.
 # : 없는 자리수 채우지않고 출력함.
패턴을가지고 parse는 원래 문자형태로 바꿔줌.

format() : 자바 객체 -> 형식화된 문자열
parse() : 형식화된 문자열 -> 자바 객체 



2. SimpleDateFormat - 날짜 형식화 (잘안쓰지만 형식은 쓰기도함) -한번 해보고 넘어감
 - java.util.Date
과거의 것~

format() : 자바 객체 -> 형식화된 문자열
parse() : 형식화된 문자열 -> 자바 객체 


3. ChoiceFormat
 - 특정 범위에 속하는 값을 문자열로 변환
 

4. MessageFormat exam.(Ex06)
  - 메세지 치환하거나 형식치환

format() : 자바 객체 -> 형식화된 문자열
parse() : 형식화된 문자열 -> 자바 객체 



위에 내용들은 형식화가 되어있음설계되어있음.)
==============================
날짜와 시간
1.Date - JDK 1.0  (exam03.Ex01) 이제 안쓴다 쓰지마

2.Calendar - JDK 1.1  (형식화 되어있지 않다.)  = 설계부족 .
너무 많은 상수가 정의되어있어 정신없네

 - 생성자 메서드는 protected : 직접 new 연산자를 통해서 생성불가
 - static Calendar getInstance() : 객체 생성 후 조회
 - 그레고리력(서기) (현재 쓰고있는 달력)
 -불기 (태국꺼) 달력이다름
getInstance() 가져오면 알아서 적용해서 달력 맞춰줌.


 Locale : 지역화 클래스
         -GregorianCalendar()
         -Budiste()




1.Date
2.Calendar









































